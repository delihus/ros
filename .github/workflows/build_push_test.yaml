name: Build/Publish Docker Image

on:
  push:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_push:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ros-distro: [humble, galactic, foxy]
        tag: [core, base]

    steps:

    - name: Print event name and ref name
      run: echo "Event name - ${{ github.event_name }}, ref name - ${{ github.ref_name}}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push (latest only)
      if: github.ref_name == 'main' && github.event_name != 'release'
      uses: docker/build-push-action@v2
      with:
        platforms: "linux/amd64, linux/arm64"
        push: true
        build-args: |
          ROS_DISTRO=${{ matrix.ros-distro }}
          TAG=${{ matrix.tag }}
        tags: husarnet/ros:${{ matrix.ros-distro }}-ros-${{ matrix.tag }}

    - name: Build and push (release)
      if: github.event_name == 'release'
      uses: docker/build-push-action@v2
      with:
        platforms: "linux/amd64, linux/arm64"
        push: true
        build-args: |
          ROS_DISTRO=${{ matrix.ros-distro }}
          TAG=${{ matrix.tag }}
        tags: |
          husarnet/ros:${{ matrix.ros-distro }}-ros-${{ matrix.tag }}
          husarnet/ros:${{ matrix.ros-distro }}-ros-${{ matrix.tag }}-${{ github.ref_name}}

  test_discovery_server:
    needs: build_push
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - ros-distro: humble
            chatter-role: talker
            discovery-server: ""
          - ros-distro: humble
            chatter-role: listener
            discovery-server: "talker"
        
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: print envs
      run: |
        echo ROS_DISTRO=${{ matrix.ros-distro }}
        echo CHATTER_ROLE=${{ matrix.chatter-role }}
        echo WAIT_HOSTNAMES=talker,listener
        echo JOINCODE=${{ secrets.JOINCODE }}
        echo DDS_CONFIG=HUSARNET_DISCOVERY_SERVER
        echo ROS_DISCOVERY_SERVER=${{ matrix.discovery-server }}

    - name: run test for ${{ matrix.chatter-role }}
      continue-on-error: true
      timeout-minutes: 1
      run: |
        cd demo
        export ROS_DISTRO=${{ matrix.ros-distro }}
        export CHATTER_ROLE=${{ matrix.chatter-role }}
        export WAIT_HOSTNAMES=talker,listener
        export JOINCODE=${{ secrets.JOINCODE }}
        export DDS_CONFIG=HUSARNET_DISCOVERY_SERVER
        export ROS_DISCOVERY_SERVER=${{ matrix.discovery-server }}
        docker compose up | tee output.txt

    - name: "Check if the log contains 'Hello World' string"
      run: "if [[ $(grep 'Hello World' demo/output.txt | wc -l) -eq 0 ]]; then exit 1; fi"

  test_simple:
    needs: test_discovery_server
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ros-distro: [humble]
        chatter-role: [talker, listener]

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: run test for ${{ matrix.chatter-role }}
      continue-on-error: true
      timeout-minutes: 1
      run: |
        cd demo
        export ROS_DISTRO=${{ matrix.ros-distro }}
        export CHATTER_ROLE=${{ matrix.chatter-role }}
        export WAIT_HOSTNAMES=talker,listener
        export JOINCODE=${{ secrets.JOINCODE }}
        export DDS_CONFIG=HUSARNET_SIMPLE_AUTO
        docker compose up | tee output.txt

    - name: "Check if the log contains 'Hello World' string"
      run: "if [[ $(grep 'Hello World' demo/output.txt | wc -l) -eq 0 ]]; then exit 1; fi"
